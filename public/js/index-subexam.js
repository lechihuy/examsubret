/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 11);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/index-subexam.js":
/*!***************************************!*\
  !*** ./resources/js/index-subexam.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction setupDepartmentSelectors() {\n  $('select[name=department_id]').select2();\n}\n\nfunction setupMajorSelectors() {\n  var department = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  $('select[name=major_id]').select2({\n    \"language\": {\n      \"noResults\": function noResults() {\n        return 'Không tìm thấy kết quả.';\n      }\n    }\n  });\n\n  if (department) {\n    var departmentId = department.val();\n    var major = department.parents('form').find('select[name=major_id]');\n    major.find('option').remove();\n    major.val('');\n    major.trigger('change');\n    $.ajax({\n      type: 'GET',\n      url: route('data.majors') + '?department_id=' + departmentId\n    }).then(function (data) {\n      major.append(new Option('Tất cả', 'all', true, true));\n      data.forEach(function (item, index) {\n        major.append(new Option(\"[\".concat(item.code, \"] \").concat(item.name), item.id, true, true));\n      });\n      major.trigger('change');\n    });\n  }\n}\n\nfunction setupSubjectSelectors() {\n  var department = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  $('select[name=subject_id]').select2({\n    \"language\": {\n      \"noResults\": function noResults() {\n        return 'Không tìm thấy kết quả.';\n      }\n    }\n  });\n\n  if (department) {\n    var departmentId = department.val();\n    var subject = department.parents('form').find('select[name=subject_id]');\n    subject.find('option').remove();\n    subject.val('');\n    subject.trigger('change');\n    $.ajax({\n      type: 'GET',\n      url: route('data.subjects') + '?department_id=' + departmentId\n    }).then(function (data) {\n      subject.append(new Option('Tất cả', 'all', true, true));\n      data.forEach(function (item, index) {\n        subject.append(new Option(\"[\".concat(item.code, \"] \").concat(item.name), item.id, true, true));\n      });\n      subject.trigger('change');\n    });\n  }\n}\n\n$(document).on('select2:select', 'select[name=department_id]', function () {\n  setupMajorSelectors($(this));\n  setupSubjectSelectors($(this));\n});\n$('#form-filter .btn-search').on('click', function () {\n  var form = new Form('#form-filter');\n  var formData = form.getData();\n  formData.forEach(function (item, key) {\n    if (item.name == 'exam_forms') {\n      delete formData[key];\n    }\n  });\n  var exam_forms = $('#form-filter input[for=exam_forms]:checked').map(function (key, item) {\n    return $(item).val();\n  }).get();\n\n  if (exam_forms.indexOf('all') > -1) {\n    exam_forms = 'all';\n  } else {\n    exam_forms = exam_forms.join();\n  }\n\n  formData.push({\n    name: 'exam_forms',\n    value: exam_forms\n  });\n  formData.push({\n    name: 'k',\n    value: $('input[name=k]').val()\n  });\n  var queries = {};\n  formData.forEach(function (item) {\n    if (Array.isArray(item.value)) {\n      queries[item.name] = item.value.join(',');\n    } else {\n      queries[item.name] = item.value;\n    }\n  });\n  window.location.href = '?' + $.param(queries);\n});\nsetupDepartmentSelectors();\nsetupMajorSelectors();\nsetupSubjectSelectors();\n$('select[name=teacher_id]').select2();\n$('select[name=class]').select2();\n$('.btn-search').on('click', function () {\n  var k = $('input[name=k]').val();\n  var url = $(this).attr('action');\n  location.href = query_url(url, 'k', k);\n});\n$('input[name=k]').on('keyup', function (e) {\n  if (e.key == 'Enter') {\n    var k = $('input[name=k]').val();\n    var url = $(this).attr('action');\n    location.href = query_url(url, 'k', k);\n  }\n}); // Save selected items\n\nif (Cookies.get('subexam_selected_items') != '' && Cookies.get('subexam_selected_items') !== undefined) {\n  var subexamSelectedItems = Cookies.get('subexam_selected_items').split(',');\n  var checked = 0;\n\n  var _iterator = _createForOfIteratorHelper(subexamSelectedItems),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      item = _step.value;\n      $(\".check-row[data-id=\".concat(item, \"]\")).prop('checked', true);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  $('.check-row').each(function (key, item) {\n    if (subexamSelectedItems.includes($(item).data('id').toString())) {\n      $(item).prop('checked', true);\n      checked++;\n    }\n  });\n\n  if (checked == $('.check-row').length) {\n    $('.check-all').prop('checked', true);\n  }\n\n  $('#save-selected-item-switcher .counter').html(subexamSelectedItems.length);\n}\n\nif (Cookies.get('subexam_save_selected_items_mode') !== undefined) {\n  $('#save-selected-item-mode').prop('checked', Cookies.get('subexam_save_selected_items_mode') === 'true');\n}\n\nif (Cookies.get('subexam_save_selected_items_mode') === 'true') {\n  $('#save-selected-item-switcher .label-counter').removeClass('d-none');\n} else {\n  $('#save-selected-item-switcher .label-counter').addClass('d-none');\n}\n\n$('#save-selected-item-mode').on('change', function () {\n  var mode = $(this).prop('checked');\n  Cookies.set(\"subexam_save_selected_items_mode\", mode);\n\n  if (Cookies.get('subexam_save_selected_items_mode') === 'true') {\n    $('#save-selected-item-switcher .label-counter').removeClass('d-none');\n    Cookies.set('subexam_selected_items', '');\n  } else {\n    $('#save-selected-item-switcher .label-counter').addClass('d-none');\n    Cookies.remove('subexam_selected_items');\n  }\n\n  $('#save-selected-item-switcher .counter').html('0');\n});\n$('.check-row').on('change', function () {\n  if (Cookies.get('subexam_save_selected_items_mode') === 'true') {\n    var _checked = $(this).prop('checked');\n\n    var _subexamSelectedItems = Cookies.get('subexam_selected_items') != '' ? Cookies.get('subexam_selected_items').split(',') : [];\n\n    var id = $(this).data('id').toString();\n\n    if (_checked && !_subexamSelectedItems.includes(id)) {\n      _subexamSelectedItems.push(id);\n    } else if (!_checked && _subexamSelectedItems.includes(id)) {\n      _subexamSelectedItems.splice(_subexamSelectedItems.indexOf(id), 1);\n    }\n\n    Cookies.set('subexam_selected_items', _subexamSelectedItems.join(','));\n    $('#save-selected-item-switcher .counter').html(_subexamSelectedItems.length);\n  }\n}); // Export table\n\n$(document).on('click', '.btn-print', function () {\n  $('#printer').remove();\n  var url = $(this).attr('action');\n  var selected = null;\n\n  if (Cookies.get('subexam_save_selected_items_mode') === 'true') {\n    selected = Cookies.get('subexam_selected_items');\n  } else {\n    var _$$map$get$join;\n\n    selected = (_$$map$get$join = $('.check-row:checked').map(function (key, item) {\n      return $(item).data('id');\n    }).get().join(',')) !== null && _$$map$get$join !== void 0 ? _$$map$get$join : '';\n  }\n\n  $('body').append(\"\\n        <iframe id=\\\"printer\\\" class=\\\"d-none\\\" src=\\\"\".concat(query_url(url, 'selected', selected), \"\\\"></iframe>\\n    \"));\n  $('#printer').get(0).contentWindow.print();\n});\n$(document).on('click', '.btn-excel', function () {\n  var url = $(this).attr('action');\n  var selected = null;\n\n  if (Cookies.get('subexam_save_selected_items_mode') === 'true') {\n    selected = Cookies.get('subexam_selected_items');\n  } else {\n    var _$$map$get$join2;\n\n    selected = (_$$map$get$join2 = $('.check-row:checked').map(function (key, item) {\n      return $(item).data('id');\n    }).get().join(',')) !== null && _$$map$get$join2 !== void 0 ? _$$map$get$join2 : '';\n  }\n\n  window.location = query_url(url, 'selected', selected);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/index-subexam.js\n");

/***/ }),

/***/ 11:
/*!*********************************************!*\
  !*** multi ./resources/js/index-subexam.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Volumes/Data/Dev/examsubret/resources/js/index-subexam.js */"./resources/js/index-subexam.js");


/***/ })

/******/ });